title Isaac and the Conservation of Mass
author Menderbug
homepage menderbug.itch.io

background_color #313638
text_color #4d9be6

game_uri https://menderbug.itch.io/isaac-and-the-conservation-of-mass

run_rules_on_level_start

=====
TAGS
=====

U_ = up
L_ = left
R_ = right
D_ = down

Subtile = _BL _BR _TL _TR

( There are only actual floor levels at 0 and 1, but tall jellies or stacked objects could be
  on level higher )
Floor = _0 _1 _2
LowFloor = _0 _1
HighFloor = _1 _2

( Defining an abbreviation because this appears everywhere )
_ = Floor

( Abbreviating these since they appear in almost every rule and just bloat the code otherwise.
ForwardPropagage ResolveMovement DetectCycles BlockCycles CleanupStep)
LoopSection = FP RM DC BC CS

directions1 = directions

Axes = right up

=========
MAPPINGS
=========

LowFloor => Higher
_0 _1 -> _1 _2

HighFloor => Lower
_1 _2 -> _0 _1

========
OBJECTS
========

Background
#1a1518

Floor:_0 
#484a77

Floor:_1
#484a77 #323353 
00000
00000
00000
00000
00000
11111
11111
11111
11111

Wall Floor:_2
#313638 #323353 
00000
00000
00000
00000
00000
11111
11111
11111
11111
11111
11111
11111
11111

FloorDeco:_0:_BL
#4d65b4 
....0
.....
.....
.....
.....

FloorDeco:_0:_BR
#4d65b4 
copy: FloorDeco:_0:_BL rot:>:^

FloorDeco:_0:_TL
#4d65b4 
copy: FloorDeco:_0:_BL rot:>:v

FloorDeco:_0:_TR
#4d65b4 
copy: FloorDeco:_0:_BL rot:>:<

FloorDeco:_1:Subtile
#4d9be6
copy: FloorDeco:_0:Subtile translate:up:4

FloorDeco:_2:Subtile
transparent

FloorEdge:directions
#4d9be6
.....
.....
.....
00000
00000
rot:down:> translate:up:4

( Fixup for outer corners of higher floors. Direction corresponds to the clockwise edge leg. )
FloorCorner:directions
#4d9be6
.....
.....
.....
00...
00...
rot:left:> translate:up:4

( Hides the front-facing walls in the bottom two rows of the grid )
WallCover
#313638
00000
00000
00000
00000
00000
00000
00000
00000

WallEdgeDark:directions:Subtile
transparent

WallEdgeDark:down:_BL
#374e4a
.....
0000.
0000.
.....
.....
translate:up:8

WallEdgeDark:down:_BR
#374e4a
copy: WallEdgeDark:down:_BL |

WallEdgeDark:up:_TL
#374e4a
.....
.....
0000.
0000.
.....
translate:up:8

WallEdgeDark:up:_TR
#374e4a
copy: WallEdgeDark:up:_TL |

WallEdgeDark:left:_TL
#374e4a
..00.
..00.
..00.
..00.
.....
translate:up:8

WallEdgeDark:right:_TR
#374e4a
copy: WallEdgeDark:left:_TL |

WallEdgeDark:left:_BL
#374e4a
.....
..00.
..00.
..00.
..00.
translate:up:8

WallEdgeDark:right:_BR
#374e4a
copy: WallEdgeDark:left:_BL |

WallEdge:directions
#0b8a8f
.....
.....
.....
00000
00000
rot:down:> translate:up:8

( Fixup for outer corners of walls. Direction corresponds to the clockwise wall leg. )
WallCorner:directions
#0b8a8f #374e4a
.....
1111.
1111.
0011.
0011.
rot:left:> translate:up:8

PlayerSprite:_0
#2e222f #c7dcd0 #ffffff #323353 #fdcbb0 #7f708a #3e3546 
..111111..
..111111..
1122221111
1122221111
1133443311
1133443311
1144444411
1144444411
..005566..
..005566..
..000066..
..000066..

PlayerSprite:_1
#2e222f #c7dcd0 #ffffff #323353 #fdcbb0 #7f708a #3e3546 
copy: PlayerSprite:_0 translate:up:4

PlayerSprite:_2
#2e222f #c7dcd0 #ffffff #323353 #fdcbb0 #7f708a #3e3546 
copy: PlayerSprite:_1 translate:up:4

Jelly1x1Sprite:_0
#fbff86 #d5e04b #a2a947 
0011110011
0011110011
1111111111
1111111111
1111001111
1111001111
0011111100
0011111100
0000110011
0000110011
2211222222
2211222222
2222221122
2222221122

Jelly1x1Sprite:_1
#fbff86 #d5e04b #a2a947 
copy: Jelly1x1Sprite:_0 translate:up:4

Jelly1x1Sprite:_2
#fbff86 #d5e04b #a2a947 
copy: Jelly1x1Sprite:_1 translate:up:4

Jelly1x1TallSprite:_0
#fbff86 #d5e04b #a2a947 
0011110011
0011110011
1111111111
1111111111
1111001111
1111001111
0011111100
0011111100
0000110011
0000110011
1122222222
1122222222
2222222211
2222222211
1122112222
1122112222
2222221122
2222221122

Jelly1x1TallSprite:_1
#fbff86 #d5e04b #a2a947 
copy: Jelly1x1TallSprite:_0 translate:up:4

( This shouldn't happen )
Jelly1x1TallSprite:_2
pink pink pink
copy: Jelly1x1TallSprite:_1 translate:up:4

( Direction indicates which side contains the other half )
Jelly2x1Sprite:right:_0
#fbff86 #d5e04b #a2a947 
0011111111
0011111111
1111001111
1111001111
1111111100
1111111100
0011111111
0011111111
0000110000
0000110000
2211222222
2211222222
2222221122
2222221122

Jelly2x1Sprite:left:_0
#fbff86 #d5e04b #a2a947 
0011110011
0011110011
1111111100
1111111100
1111001111
1111001111
1111111111
1111111111
1100110000
1100110000
2222221122
2222221122
2222112222
2222112222

Jelly2x1Sprite:down:_0
#fbff86 #d5e04b #a2a947 
0011110011
0011110011
0011111111
0011111111
1111001111
1111001111
0011111100
0011111100
1111110011
1111110011
translate:up:4

Jelly2x1Sprite:up:_0
#fbff86 #d5e04b #a2a947 
0011111111
0011111111
0011001111
0011001111
1111111111
1111111111
0011111100
0011111100
0000110011
0000110011
2211222222
2211222222
2222221122
2222221122

Jelly2x1Sprite:directions:_1
#fbff86 #d5e04b #a2a947 
copy: Jelly2x1Sprite:directions:_0 translate:up:4

Jelly2x1Sprite:directions:_2
#fbff86 #d5e04b #a2a947 
copy: Jelly2x1Sprite:directions:_1 translate:up:4

_Connector:directions:_
transparent
(pink
.....
.....
..000
.....
.....
rot:right:>)

_ConnectorHigh:_0
transparent

_ConnectorHigh:_1
transparent

_Player:_
transparent

_Jelly1x1:_
transparent

_Jelly1x1TallLow:_
transparent

_Jelly1x1TallHigh:_
transparent

_Jelly2x1:left:_0 _Jelly2x1:right:_0
transparent

_Jelly2x1:left:_1 _Jelly2x1:right:_1
transparent

_Jelly2x1:left:_2 _Jelly2x1:right:_2
transparent

_Jelly2x1:up:_0 _Jelly2x1:down:_0
transparent

_Jelly2x1:up:_1 _Jelly2x1:down:_1
transparent

_Jelly2x1:up:_2 _Jelly2x1:down:_2
transparent

( Used to mark some cells during the 2x1 squishing process )
_TempJelly:_
transparent

_Moving:directions:_
pink

_Blocked:directions:_
pink

_Squishing:_
yellow

_Unprocessed:_
red

_Processing:_
green

_Pending:_
purple

_PendingChecking:_
black

_PendingNoCycle:_
grey

_PendingCycle:_
white

_Processed:_
blue

_CheckMovement
transparent

_Falling:_
transparent

_FallingResolved:_
transparent

_MovementTarget:_
pink

_MovementConflict:_
pink

_Temp
pink

_Temp:_
pink

_Rerun
pink

_RerunDC
pink

_RunSecondStep
pink

_Vacated:_
pink

( Abbreviating these since they appear in almost every rule and just bloat the code otherwise. )
_LS:LoopSection
transparent

_Subtile:Subtile
transparent

( We only need this to define empty properties below )
__Nothing__
transparent

=======
LEGEND
=======

. = Floor:_0
* = Floor:_1
# = Wall
P = PlayerSprite:_0 and Floor:_0
ℙ = PlayerSprite:_1 and Floor:_1
■ = Jelly1x1Sprite:_0 and Floor:_0
□ = Jelly1x1Sprite:_1 and Floor:_1
▌ = Jelly2x1Sprite:up:_0 and Floor:_0
▐ = Jelly2x1Sprite:up:_1 and Floor:_1
▄ = Jelly2x1Sprite:right:_0 and Floor:_0
▀ = Jelly2x1Sprite:right:_1 and Floor:_1

Wall:_0 = Floor:_1 or Floor:_2
Wall:_1 = Floor:_2
Wall:_2 = Floor:_2

Sprite:_0 = PlayerSprite:_0 or Jelly1x1Sprite:_0 or Jelly2x1Sprite:directions:_0 or Jelly1x1TallSprite:_0
Sprite:_1 = PlayerSprite:_1 or Jelly1x1Sprite:_1 or Jelly2x1Sprite:directions:_1 or Jelly1x1TallSprite:_1
Sprite:_2 = PlayerSprite:_2 or Jelly1x1Sprite:_2 or Jelly2x1Sprite:directions:_2 or Jelly1x1TallSprite:_2
Sprite = Sprite:_

_Jelly2x1:_0 = _Jelly2x1:directions:_0
_Jelly2x1:_1 = _Jelly2x1:directions:_1
_Jelly2x1:_2 = _Jelly2x1:directions:_2
_Jelly2x1 = _Jelly2x1:_

_Jelly:_0 = _Jelly1x1:_0 or _Jelly2x1:_0 or _Jelly1x1TallLow:_0 or _Jelly1x1TallHigh:_0 or _TempJelly:_0
_Jelly:_1 = _Jelly1x1:_1 or _Jelly2x1:_1 or _Jelly1x1TallLow:_1 or _Jelly1x1TallHigh:_1 or _TempJelly:_1
_Jelly:_2 = _Jelly1x1:_2 or _Jelly2x1:_2 or _Jelly1x1TallLow:_2 or _Jelly1x1TallHigh:_2 or _TempJelly:_2
_Jelly = _Jelly:_

_Jelly1x1TallLow = _Jelly1x1TallLow:_
_Jelly1x1TallHigh = _Jelly1x1TallHigh:_

_Jelly1x1Tall:_0 = _Jelly1x1TallLow:_0 or _Jelly1x1TallHigh:_0
_Jelly1x1Tall:_1 = _Jelly1x1TallLow:_1 or _Jelly1x1TallHigh:_1
_Jelly1x1Tall:_2 = _Jelly1x1TallLow:_2 or _Jelly1x1TallHigh:_2
_Jelly1x1Tall = _Jelly1x1Tall:_

_Player = _Player:_

ObjectType = _Jelly or _Player

RigidMovable:_0 = _Jelly1x1:_0 or _Jelly1x1Tall:_0 or _Player:_0
RigidMovable:_1 = _Jelly1x1:_1 or _Jelly1x1Tall:_1 or _Player:_1
RigidMovable:_2 = _Jelly1x1:_2 or _Jelly1x1Tall:_2 or _Player:_2
RigidMovable = RigidMovable:_

Movable:_0 = _Jelly:_0 or _Player:_0
Movable:_1 = _Jelly:_1 or _Player:_1
Movable:_2 = _Jelly:_2 or _Player:_2
Movable = Movable:_

Support:_1 = _Jelly:_0 or Floor:_1
Support:_2 = _Jelly:_1 or Floor:_2

_ConnectorVertical:_0 = _ConnectorHigh:_0
_ConnectorVertical:_1 = _ConnectorHigh:_0 or _ConnectorHigh:_1
_ConnectorVertical:_2 = _ConnectorHigh:_1
_ConnectorVertical = _ConnectorVertical:_

_Connector:_0 = _Connector:directions:_0 or _ConnectorVertical:_0
_Connector:_1 = _Connector:directions:_1 or _ConnectorVertical:_1
_Connector:_2 = _Connector:directions:_2 or _ConnectorVertical:_2
_Connector = _Connector:_

_Moving:_0 = _Moving:directions:_0
_Moving:_1 = _Moving:directions:_1
_Moving:_2 = _Moving:directions:_2
_Moving = _Moving:_

_Blocked:_0 = _Blocked:directions:_0
_Blocked:_1 = _Blocked:directions:_1
_Blocked:_2 = _Blocked:directions:_2
_Blocked = _Blocked:_

_FullyBlocked:_0 = _Blocked:left:_0 and _Blocked:right:_0 and _Blocked:up:_0 and _Blocked:down:_0
_FullyBlocked:_1 = _Blocked:left:_1 and _Blocked:right:_1 and _Blocked:up:_1 and _Blocked:down:_1
_FullyBlocked:_2 = _Blocked:left:_2 and _Blocked:right:_2 and _Blocked:up:_2 and _Blocked:down:_2

_BlockedExcept:left:_0 = _Blocked:right:_0 and _Blocked:up:_0 and _Blocked:down:_0
_BlockedExcept:left:_1 = _Blocked:right:_1 and _Blocked:up:_1 and _Blocked:down:_1
_BlockedExcept:left:_2 = _Blocked:right:_2 and _Blocked:up:_2 and _Blocked:down:_2

_BlockedExcept:right:_0 = _Blocked:left:_0 and _Blocked:up:_0 and _Blocked:down:_0
_BlockedExcept:right:_1 = _Blocked:left:_1 and _Blocked:up:_1 and _Blocked:down:_1
_BlockedExcept:right:_2 = _Blocked:left:_2 and _Blocked:up:_2 and _Blocked:down:_2

_BlockedExcept:up:_0 = _Blocked:left:_0 and _Blocked:right:_0 and _Blocked:down:_0
_BlockedExcept:up:_1 = _Blocked:left:_1 and _Blocked:right:_1 and _Blocked:down:_1
_BlockedExcept:up:_2 = _Blocked:left:_2 and _Blocked:right:_2 and _Blocked:down:_2

_BlockedExcept:down:_0 = _Blocked:left:_0 and _Blocked:right:_0 and _Blocked:up:_0
_BlockedExcept:down:_1 = _Blocked:left:_1 and _Blocked:right:_1 and _Blocked:up:_1
_BlockedExcept:down:_2 = _Blocked:left:_2 and _Blocked:right:_2 and _Blocked:up:_2

Status:_0 = _Unprocessed:_0 or _Processing:_0 or _Pending:_0 or _PendingChecking:_0 or _Processed:_0
Status:_1 = _Unprocessed:_1 or _Processing:_1 or _Pending:_1 or _PendingChecking:_1 or _Processed:_1
Status:_2 = _Unprocessed:_2 or _Processing:_2 or _Pending:_2 or _PendingChecking:_2 or _Processed:_2
Status = Status:_

_Pending = _Pending:_
_PendingNoCycle = _PendingNoCycle:_
_Unprocessed = _Unprocessed:_
_Processed = _Processed:_

_PendingChecked:_0 = _PendingCycle:_0 or _PendingNoCycle:_0
_PendingChecked:_1 = _PendingCycle:_1 or _PendingNoCycle:_1
_PendingChecked:_2 = _PendingCycle:_2 or _PendingNoCycle:_2

MovementMarker:_0 = _MovementTarget:_0 or _MovementConflict:_0
MovementMarker:_1 = _MovementTarget:_1 or _MovementConflict:_1
MovementMarker:_2 = _MovementTarget:_2 or _MovementConflict:_2
MovementMarker = MovementMarker:_

_Falling = _Falling:_
_FallingResolved = _FallingResolved:_

_Subtile = _Subtile:Subtile

Player = PlayerSprite:_

=======
SOUNDS
=======

Movable MOVE 36772507

================
COLLISIONLAYERS
================

--<v--

Background
Floor:_
FloorDeco:_:Subtile
directions -> FloorEdge:directions
directions -> FloorCorner:directions
WallCover
directions -> WallEdgeDark:directions:Subtile
_ -> Sprite:_

--<v--

directions -> WallEdge:directions
directions -> WallCorner:directions

--

_Subtile
_ -> Movable:_
_, directions -> _Blocked:directions:_
_ -> _Moving:_, _Vacated:_
_ -> _Squishing:_
_CheckMovement
_ -> MovementMarker:_
_ -> _Falling:_
_ -> _FallingResolved:_
_Temp
_ -> _Temp:_
_Rerun
_RerunDC
_RunSecondStep
_ -> Status:_
_ -> _PendingChecked:_
_LS:LoopSection
_, directions -> _Connector:directions:_
_ConnectorVertical
__Nothing__

======
RULES
======

( Only relevant on level load: fill entire level with subtile markers )
random [ ] -> [ _Temp ]
[ _Temp ] [ ] -> [ ] [ _Subtile:_TL ]
right [ _Subtile:_TL | ] -> [ _Subtile:_TL | _Subtile:_TR ]
right [ _Subtile:_TR | | ] -> [ _Subtile:_TR | _Subtile:_TL | _Subtile:_TR ]
down [ _Subtile:_TL | ] -> [ _Subtile:_TL | _Subtile:_BL ]
down [ _Subtile:_BL | | ] -> [ _Subtile:_BL | _Subtile:_TL | _Subtile:_BL ]
down [ _Subtile:_TR | ] -> [ _Subtile:_TR | _Subtile:_BR ]
down [ _Subtile:_BR | | ] -> [ _Subtile:_BR | _Subtile:_TR | _Subtile:_BR ]

( Cover the bottom two rows with special wall tiles )
down [ | ] -> [ > Background | ]
[ stationary Background ] -> [ WallCover ]

( Decorate floor tiles )
_ Subtile [ Floor:_ _Subtile:Subtile ] -> [ Floor:_ _Subtile:Subtile FloorDeco:_:Subtile ]

( Decorate the edges of higher floors )
[ Floor:_1 | no Floor:_1 no Wall ] -> [ Floor:_1 FloorEdge:> | ]
[ Floor:_1 no FloorEdge:^ | Floor:_1 FloorEdge:^ ] -> [ Floor:_1 FloorCorner:> | Floor:_1 FloorEdge:^ ]

( Decorate the edges of walls )
Subtile [ Wall _Subtile:Subtile | no Wall ] -> [ Wall WallEdge:> WallEdgeDark:>:Subtile _Subtile:Subtile | ]
[ Wall no WallEdge:^ | Wall WallEdge:^ ] -> [ Wall WallCorner:> | Wall WallEdge:^ ]

( Clean up )
( TODO: this is probably unnecessary )
[ _Connector ] -> [ ]
[ ObjectType ] -> [ ]

( Expand player. We're handling movement manually, so we replace the movement input with a marker object. )
_ [ > PlayerSprite:_ ] -> [ _Player:_ _Moving:>:_ _Connector:right:_ _Connector:up:_ ]
_ [ PlayerSprite:_ ] -> [ _Player:_ _Connector:right:_ _Connector:up:_ ]
_ [ _Player:_ _Connector:>:_ _Connector:^:_ | no _Player:_ ] -> [ _Player:_ _Connector:>:_ _Connector:^:_ | _Player:_ _Connector:<:_ _Connector:^:_ ]
_ [ _Player:_ _Moving:_ ] [ _Player:_ ] -> [ _Player:_ _Moving:_ _Processing:_ ] [ _Player:_ _Moving:_ _Processing:_ ]

( Expand 1x1 jellies )
_ [ Jelly1x1Sprite:_ ] -> [ _Jelly1x1:_ _Connector:right:_ _Connector:up:_ ]
_ [ _Jelly1x1:_ _Connector:>:_ _Connector:^:_ | ] -> [ _Jelly1x1:_ _Connector:>:_ _Connector:^:_ | _Jelly1x1:_ _Connector:<:_ _Connector:^:_ ]

( Expand tall 1x1 jellies )
LowFloor [ Jelly1x1TallSprite:LowFloor ] -> [ _Jelly1x1TallLow:LowFloor _Jelly1x1TallHigh:Higher _Connector:right:LowFloor _Connector:up:LowFloor _Connector:right:Higher _Connector:up:Higher _ConnectorHigh:LowFloor ]
LowFloor [ _Jelly1x1TallLow:LowFloor _Connector:>:LowFloor _Connector:^:LowFloor _ConnectorVertical:LowFloor | ] -> [ _Jelly1x1TallLow:LowFloor _Connector:>:LowFloor _Connector:^:LowFloor _ConnectorVertical:LowFloor | _Jelly1x1TallLow:LowFloor _Jelly1x1TallHigh:Higher _Connector:<:LowFloor _Connector:^:LowFloor _Connector:<:Higher _Connector:^:Higher _ConnectorVertical:LowFloor ]

( Expand 2x1 jellies )
_ Axes [ Jelly2x1Sprite:Axes:_ ] -> [ _Jelly2x1:Axes:_ _Connector:right:_ _Connector:up:_ ]
_ [ _Jelly2x1:perpendicular:_ _Connector:>:_ _Connector:perpendicular:_ | ] -> [ _Jelly2x1:perpendicular:_ _Connector:>:_ _Connector:perpendicular:_ | _Jelly2x1:perpendicular:_ _Connector:<:_ _Connector:perpendicular:_ ]
_ [ _Jelly2x1:>:_ _Connector:>:_ _Connector:perpendicular:_ no _Temp:_ | | | ] -> [ _Jelly2x1:>:_ _Connector:>:_ _Connector:perpendicular:_ | _Jelly2x1:>:_ _Connector:>:_ _Connector:perpendicular:_ _Connector:<:_ _Temp:_ | _Jelly2x1:>:_ _Connector:>:_ _Connector:perpendicular:_ _Connector:<:_ _Temp:_ | _Jelly2x1:>:_ _Connector:<:_ _Connector:perpendicular:_ ]
[ _Temp:_ ] -> [ ]
[ Jelly2x1Sprite:directions:_ ] -> [ ]

( Process any falling markers from a previous turn )
HighFloor directions [ Movable:HighFloor _Falling:HighFloor _Connector:directions:HighFloor no Movable:Lower ] -> [ Movable:HighFloor _Falling:HighFloor _Connector:directions:Lower ]
+ [ Movable:_1 _Falling:_1 _ConnectorHigh:_1 no Movable:_0 ] -> [ Movable:_1 _Falling:_1 _ConnectorHigh:_0 ]
+ HighFloor [ _Player:HighFloor _Falling:HighFloor no Movable:Lower no _Connector:HighFloor ] -> [ _Player:Lower ]
+ HighFloor [ _Jelly1x1:HighFloor _Falling:HighFloor no Movable:Lower no _Connector:HighFloor ] -> [ _Jelly1x1:Lower ]
+ HighFloor Axes [ _Jelly2x1:Axes:HighFloor _Falling:HighFloor no Movable:Lower no _Connector:HighFloor ] -> [ _Jelly2x1:Axes:Lower ]
+ [ _Jelly1x1TallLow:_1 _Falling:_1 no Movable:_0 no _Connector:_1 ] -> [ _Jelly1x1TallLow:_0 ]
+ [ _Jelly1x1TallHigh:_2 _Falling:_2 no Movable:_1 no _Connector:_2 ] -> [ _Jelly1x1TallHigh:_1 ]

_ [ Movable:_ no Status:_ ] -> [ Movable:_ _Unprocessed:_ ]

( Can't nest loops in PS, so we have to put everything in a single loop and group things manually )
random [ ] -> [ _Temp ]
[ ] [ _Temp ] -> [ _LS:FP ] [ ]
_ [ _LS:FP ] [ _Player:_ _Moving:>:_ ] -> [ _LS:FP > _RunSecondStep ] [ _Player:_ _Moving:>:_ ]

startloop
  ((( Forward propagate movement intent )))
  
  ( Walls immediately block movement )
  _ [ _LS:FP ] [ Movable:_ _Moving:>:_ no _Blocked:>:_ | Wall:_ ] -> [ _LS:FP _Rerun ] [ Movable:_ _Moving:>:_ _FullyBlocked:_ | Wall:_ ]
  _ directions [ _LS:FP ] [ Movable:_ _Moving:directions:_ _FullyBlocked:_ _Connector:>:_ | Movable:_ _Moving:directions:_ no _Blocked:_ ] -> [ _LS:FP _Rerun ] [ Movable:_ _Moving:directions:_ _FullyBlocked:_ _Connector:>:_ | Movable:_ _Moving:directions:_ _FullyBlocked:_ ]
  LowFloor [ _LS:FP ] [ Movable:LowFloor _FullyBlocked:LowFloor _ConnectorHigh:LowFloor no _Blocked:Higher ] -> [ _LS:FP _Rerun ] [ Movable:LowFloor _FullyBlocked:LowFloor _ConnectorHigh:LowFloor _FullyBlocked:Higher ]
  LowFloor [ _LS:FP ] [ Movable:LowFloor _FullyBlocked:Higher _ConnectorHigh:LowFloor no _Blocked:LowFloor ] -> [ _LS:FP _Rerun ] [ Movable:LowFloor _FullyBlocked:LowFloor _ConnectorHigh:LowFloor _FullyBlocked:Higher ]
 
  ( Movables trying to move into other movables are marked as pending )
  _ [ _LS:FP ] [ Movable:_ _Moving:>:_ no _Blocked:>:_ _Processing:_ no _Connector:>:_ | Movable:_ ] -> [ _LS:FP _Rerun ] [ Movable:_ _Moving:>:_ _Pending:_ | Movable:_ ]
  _ directions [ _LS:FP ] [ Movable:_ _Moving:directions:_ _Pending:_ _Connector:>:_ | Movable:_ _Moving:directions:_ _Processing:_ ] -> [ _LS:FP _Rerun ] [ Movable:_ _Moving:directions:_ _Pending:_ _Connector:>:_ | Movable:_ _Moving:directions:_ _Pending:_ ]
  LowFloor [ _LS:FP ] [ Movable:LowFloor _Pending:LowFloor _ConnectorHigh:LowFloor _Processing:Higher ] -> [ _LS:FP _Rerun ] [ Movable:LowFloor _Pending:LowFloor _ConnectorHigh:LowFloor _Pending:Higher ]
  LowFloor [ _LS:FP ] [ Movable:LowFloor _Processing:LowFloor _ConnectorHigh:LowFloor _Pending:Higher ] -> [ _LS:FP _Rerun ] [ Movable:LowFloor _Pending:LowFloor _ConnectorHigh:LowFloor _Pending:Higher ]
    
  ( Propagate movement to unprocessed movables )
  _ [ _LS:FP ] [ Movable:_ _Moving:>:_ no _Blocked:>:_ no _Connector:>:_ | Movable:_ no _Moving:_ no _Blocked:>:_ ] -> [ _LS:FP _Rerun _CheckMovement ] [ Movable:_ _Moving:>:_ | Movable:_ _Moving:>:_ _Processing:_ no _Blocked:_ ]
  _ [ _LS:FP ] [ Movable:_ _Moving:_ _Connector:>:_ | Movable:_ no _Moving:_ ] -> [ _LS:FP _Rerun ] [ Movable:_ _Moving:_ _Connector:>:_ | Movable:_ _Moving:_ _Processing:_ no _Blocked:_ ]
  LowFloor directions [ _LS:FP ] [ Movable:LowFloor _Moving:directions:LowFloor _ConnectorHigh:LowFloor no _Moving:Higher ] -> [ _LS:FP _Rerun ] [ Movable:LowFloor _Moving:directions:LowFloor _ConnectorHigh:LowFloor _Moving:directions:Higher _Processing:Higher no _Blocked:Higher ]
  LowFloor directions [ _LS:FP ] [ Movable:LowFloor _Moving:directions:Higher _ConnectorHigh:LowFloor no _Moving:LowFloor ] -> [ _LS:FP _Rerun ] [ Movable:LowFloor _Moving:directions:Higher _ConnectorHigh:LowFloor _Moving:directions:LowFloor _Processing:LowFloor no _Blocked:LowFloor ]

  [ _LS:FP no _Rerun ] -> [ _LS:RM ]
  [ _LS:FP _Rerun ] -> [ _LS:FP ]
  
  ((( Resolve movement and squishing )))
  
  ( Find cells moved into by multiple objects and block those objects )
  _ [ _LS:RM _CheckMovement ] [ Movable:_ _Moving:>:_ no _Blocked:>:_ _Processing:_ no _Connector:>:_ no _Temp:_ | no _MovementTarget:_ ] -> [ _LS:RM _CheckMovement ] [ Movable:_ _Moving:>:_ _Processing:_ _Temp:_ | _MovementTarget:_ ]
  _ [ _LS:RM _CheckMovement ] [ Movable:_ _Moving:>:_ no _Blocked:>:_ _Processing:_ no _Connector:>:_ no _Temp:_ | _MovementTarget:_ ] -> [ _LS:RM _CheckMovement ] [ Movable:_ _Moving:>:_ _Processing:_ _Temp:_ | _MovementConflict:_ ]
  [ _LS:RM _CheckMovement ] [ _Temp:_ ] -> [ _LS:RM _CheckMovement ] [ ]
  _ [ _LS:RM _CheckMovement ] [ Movable:_ _Moving:>:_ no _Blocked:>:_ no _Connector:>:_ | _MovementConflict:_ ] -> [ _LS:RM _CheckMovement _Rerun ] [ Movable:_ _Moving:>:_ _Blocked:>:_ _Processing:_ | _MovementConflict:_ ]
  _ directions [ _LS:RM _CheckMovement ] [ Movable:_ _Moving:directions:_ _Blocked:directions:_ _Connector:>:_ | Movable:_ _Moving:directions:_ no _Blocked:directions:_ ] -> [ _LS:RM _CheckMovement _Rerun ] [ Movable:_ _Moving:directions:_ _Blocked:directions:_ _Connector:>:_ | Movable:_ _Moving:directions:_ _Blocked:directions:_ ]
  LowFloor directions [ _LS:RM _CheckMovement ] [ Movable:LowFloor _Blocked:directions:LowFloor _ConnectorHigh:LowFloor no _Blocked:directions:Higher ] -> [ _LS:RM _CheckMovement _Rerun ] [ Movable:LowFloor _Blocked:directions:LowFloor _ConnectorHigh:LowFloor _Blocked:directions:Higher ]
  LowFloor directions [ _LS:RM _CheckMovement ] [ Movable:LowFloor _Blocked:directions:Higher _ConnectorHigh:LowFloor no _Blocked:directions:LowFloor ] -> [ _LS:RM _CheckMovement _Rerun ] [ Movable:LowFloor _Blocked:directions:Higher _ConnectorHigh:LowFloor _Blocked:directions:LowFloor ]
  [ _LS:RM _CheckMovement ] [ MovementMarker ] -> [ _LS:RM _CheckMovement ] [ ]
  [ _LS:RM _CheckMovement ] -> [ _LS:RM ]
    
  ( Movables that are still marked as processing can move freely, so we perform the move and mark them as
    processed and blocked. To move all the things belonging to a movable, we move everything out of the moving
    cell into the empty cell, then move the movement marker and repeat. )
  _ [ _LS:RM ] [ Movable:_ _Moving:>:_ no _Blocked:>:_ _Processing:_ _Connector:_ no _Squishing:_ | no Movable:_ ] -> [ _LS:RM _Rerun ] [ Movable:_ _Moving:>:_ _Processing:_ | _Connector:_ ]
  + _ [ _LS:RM ] [ Movable:_ _Moving:>:_ no _Blocked:>:_ _Processing:_ no _Squishing:_ | no Movable:_ ] -> [ _LS:RM _Rerun ] [ _Vacated:_ | Movable:_ _BlockedExcept:>:_ _Processed:_ no _Vacated:_ ]
  
  ( Squishing objects that are still marked as processing can squish freely. We handle the different squishing
    cases explicitly. )
  ( Squish 2x1 equally. We expand the front 1x1 into a 2x1 and then delete the rear 1x1. )
  _ [ _LS:RM ] [ _Jelly2x1:perpendicular:_ _Moving:<:_ no _Blocked:<:_ _Processing:_ _Squishing:_ | _Jelly2x1:perpendicular:_ _Moving:>:_ no _Blocked:>:_ _Processing:_ _Squishing:_ ] -> [ _LS:RM _Rerun ] [ _Jelly2x1:perpendicular:_ _Moving:<:_ _Processing:_ _Squishing:_ _Temp:_ | _Jelly2x1:perpendicular:_ _Moving:>:_ _Processing:_ _Squishing:_ _Temp:_ ]
  _ [ _LS:RM ] [ _Connector:>:_ no _Connector:<:_ _Temp:_ | _Connector:<:_ _Connector:>:_ _Temp:_ ] -> [ _LS:RM _Rerun ] [ _Connector:>:_ | _Connector:<:_ ]
  _ [ _LS:RM ] [ | _Jelly2x1:perpendicular:_ _Moving:<:_ no _Blocked:<:_ _Processing:_ _Squishing:_ _Connector:perpendicular:_ | _Jelly2x1:perpendicular:_ _Moving:>:_ no _Blocked:>:_ _Processing:_ _Squishing:_ | ] -> [ _LS:RM _Rerun ] [ _Jelly2x1:>:_ _FullyBlocked:_ _Processed:_ _Connector:perpendicular:_ _Connector:>:_ | _Jelly2x1:>:_ _FullyBlocked:_ _Processed:_ _Connector:perpendicular:_ _Connector:<:_ _Connector:>:_ | _Jelly2x1:>:_ _FullyBlocked:_ _Processed:_ _Connector:perpendicular:_ _Connector:<:_ _Connector:>:_ | _Jelly2x1:>:_ _FullyBlocked:_ _Processed:_ _Connector:perpendicular:_ _Connector:<:_ ]
  _ [ _LS:RM ] [ _Jelly2x1:parallel:_ _Moving:>:_ _Processing:_ _Squishing:_ _Connector:>:_ | _Jelly2x1:parallel:_ _Moving:>:_ _Processing:_ _Squishing:_ _Connector:>:_ | no _Squishing:_ no _Connector:<:_ ] -> [ _LS:RM _Rerun ] [ _Vacated:_ no _Connector:_ | _Vacated:_ no _Connector:_ | ]

  ( Squish 2x1 to one side. We expand the front 1x1 into a 2x1 and then delete the rear 1x1. )
  _ [ _LS:RM ] [ _Jelly2x1:perpendicular:_ _Moving:<:_ _Blocked:<:_ _Processing:_ _Squishing:_ no _Connector:<:_ _Connector:>:_ | _Jelly2x1:perpendicular:_ _Moving:>:_ no _Blocked:>:_ _Processing:_ _Squishing:_ _Connector:<:_ _Connector:>:_ | _TempJelly:_ _Moving:>:_ no _Blocked:>:_ _Processing:_ _Squishing:_ _Connector:<:_ no _Connector:>:_ ] -> [ _LS:RM _Rerun ] [ _Jelly2x1:perpendicular:_ _Moving:<:_ _Blocked:<:_ _Processing:_ _Squishing:_ _Connector:>:_ _Temp:_ | _Jelly2x1:perpendicular:_ _Moving:>:_ _Processing:_ _Squishing:_ _Connector:<:_ _Connector:>:_ _Temp:_ | _TempJelly:_ _Moving:>:_ _Processing:_ _Squishing:_ _Connector:<:_ ]
  _ [ _LS:RM ] [ _Jelly2x1:parallel:_ _Connector:>:_ no _Connector:<:_ _Temp:_ | _Connector:<:_ _Connector:>:_ _Temp:_ ] -> [ _LS:RM _Rerun ] [ _Jelly2x1:parallel:_ _Connector:>:_ | _Connector:<:_ ]
  _ [ _LS:RM ] [ _Jelly2x1:perpendicular:_ _Moving:<:_ _Blocked:<:_ _Processing:_ _Squishing:_ _Connector:perpendicular:_ | _Jelly2x1:perpendicular:_ _Moving:>:_ no _Blocked:>:_ _Processing:_ _Squishing:_ | _TempJelly:_ _Moving:>:_ no _Blocked:>:_ _Processing:_ _Squishing:_ _Connector:<:_ no _Connector:>:_ | ] -> [ _LS:RM _Rerun ] [ _Jelly2x1:>:_ _FullyBlocked:_ _Processed:_ _Connector:perpendicular:_ _Connector:>:_ | _Jelly2x1:>:_ _FullyBlocked:_ _Processed:_ _Connector:perpendicular:_ _Connector:<:_ _Connector:>:_ | _Jelly2x1:>:_ _FullyBlocked:_ _Processed:_ _Connector:perpendicular:_ _Connector:<:_ _Connector:>:_ | _Jelly2x1:>:_ _FullyBlocked:_ _Processed:_ _Connector:perpendicular:_ _Connector:<:_ ]
  _ [ _LS:RM ] [ _Jelly2x1:parallel:_ _Moving:>:_ _Processing:_ _Squishing:_ _Connector:>:_ | _Jelly2x1:parallel:_ _Moving:>:_ _Processing:_ _Squishing:_ _Connector:>:_ | no _Squishing:_ no _Connector:<:_ ] -> [ _LS:RM _Rerun ] [ _Vacated:_ no _Connector:_ | _Vacated:_ no _Connector:_ | ]
  
  ( When a 2x1 gets blocked halfway through squishing to one side, we remove the temporary jelly
    objects and treat this the same as if it had been blocked immediately. )
  _ [ _LS:RM ] [ _Jelly2x1:perpendicular:_ _Moving:<:_ _Blocked:<:_ _Processing:_ _Squishing:_ no _Connector:<:_ _Connector:>:_ | _Jelly2x1:perpendicular:_ _Moving:>:_ _Processing:_ _Squishing:_ _Connector:<:_ _Connector:>:_ | _TempJelly:_ _Moving:>:_ _Blocked:>:_ _Processing:_ _Squishing:_ _Connector:<:_ ] -> [ _LS:RM _Rerun ] [ _Jelly2x1:perpendicular:_ _Moving:<:_ _Blocked:<:_ _Processing:_ _Squishing:_ _Connector:>:_ | _Jelly2x1:perpendicular:_ _Moving:>:_ _Blocked:>:_ _Processing:_ _Squishing:_ _Connector:<:_ | no _Blocked:_ ]
  
  ( Squish 2x1 into a tall 1x1 if both sides are blocked. )
  ( TODO: Should block the squish if this happens on the top floor or there's an object on top of the front 1x1. )
  LowFloor [ _LS:RM ] [ _Jelly2x1:perpendicular:LowFloor _Moving:<:LowFloor _Blocked:<:LowFloor _Processing:LowFloor _Squishing:LowFloor | _Jelly2x1:perpendicular:LowFloor _Moving:>:LowFloor _Blocked:>:LowFloor _Processing:LowFloor _Squishing:LowFloor ] -> [ _LS:RM _Rerun ] [ _Jelly2x1:perpendicular:LowFloor _Moving:<:LowFloor _Blocked:<:LowFloor _Processing:LowFloor _Squishing:LowFloor _Temp:LowFloor | _Jelly2x1:perpendicular:LowFloor _Moving:>:LowFloor _Blocked:>:LowFloor _Processing:LowFloor _Squishing:LowFloor _Temp:LowFloor ]
  LowFloor [ _LS:RM ] [ _Jelly2x1:parallel:LowFloor _Moving:>:LowFloor _Processing:LowFloor _Squishing:LowFloor _Connector:>:LowFloor no _Connector:<:LowFloor | _Jelly2x1:parallel:LowFloor _Moving:>:LowFloor _Processing:LowFloor _Squishing:LowFloor _Connector:<:LowFloor _Connector:>:LowFloor | _Jelly2x1:parallel:LowFloor _Temp:LowFloor _Processing:LowFloor _Squishing:LowFloor _Connector:<:LowFloor _Connector:>:LowFloor | _Jelly2x1:parallel:LowFloor _Temp:LowFloor _Processing:LowFloor _Squishing:LowFloor _Connector:<:LowFloor no _Connector:>:LowFloor ] -> [ _LS:RM _Rerun ] [ _Vacated:LowFloor no _Connector:LowFloor | _Vacated:LowFloor no _Connector:LowFloor | _Jelly1x1TallLow:LowFloor _Jelly1x1TallHigh:Higher no _Moving:LowFloor _Connector:>:LowFloor _ConnectorHigh:LowFloor _Processed:LowFloor _Processed:Higher _FullyBlocked:LowFloor _FullyBlocked:Higher | _Jelly1x1TallLow:LowFloor _Jelly1x1TallHigh:Higher no _Moving:LowFloor _Connector:<:LowFloor _ConnectorHigh:LowFloor _Processed:LowFloor _Processed:Higher _FullyBlocked:LowFloor _FullyBlocked:Higher ]
  LowFloor directions [ _LS:RM ] [ _Jelly1x1TallLow:LowFloor _Connector:directions:LowFloor _ConnectorHigh:LowFloor no _Connector:directions:Higher ] -> [ _LS:RM _Rerun ] [ _Jelly1x1TallLow:LowFloor _Connector:directions:LowFloor _ConnectorHigh:LowFloor _Connector:directions:Higher ]

  ( If at this point a pending movable points at a vacated cell, we revert it to processing to check it again next
    iteration )
  _ [ _LS:RM ] [ Movable:_ _Moving:>:_ _Pending:_ no _Connector:>:_ | _Vacated:_ ] -> [ _LS:RM _Rerun ] [ Movable:_ _Moving:>:_ _Processing:_ | _Vacated:_ ]
  _ directions [ _LS:RM ] [ Movable:_ _Moving:directions:_ _Processing:_ _Connector:>:_ | Movable:_ _Moving:directions:_ _Pending:_ ] -> [ _LS:RM _Rerun ] [ Movable:_ _Moving:directions:_ _Processing:_ _Connector:>:_ | Movable:_ _Moving:directions:_ _Processing:_ ]
  LowFloor [ _LS:RM ] [ Movable:LowFloor _Processing:LowFloor _ConnectorHigh:LowFloor _Pending:Higher ] -> [ _LS:RM _Rerun ] [ Movable:LowFloor _Processing:LowFloor _ConnectorHigh:LowFloor _Processing:Higher ]
  LowFloor [ _LS:RM ] [ Movable:LowFloor _Processing:Higher _ConnectorHigh:LowFloor _Pending:LowFloor ] -> [ _LS:RM _Rerun ] [ Movable:LowFloor _Processing:Higher _ConnectorHigh:LowFloor _Processing:LowFloor ]
  [ _LS:RM ] [ _Vacated:_ ] -> [ _LS:RM ] [ ]

  
  ((( Process blocked objects )))

  ( If the player is blocked, we cancel the second step, if any )
  _ [ _LS:RM _RunSecondStep ] [ _Player:_ _Processing:_ _Moving:>:_ _Blocked:>:_ ] -> [ _LS:RM ] [ _Player:_ _Processing:_ _Moving:>:_ _Blocked:>:_ ]
  ( 1x1 objects become permanently blocked )
  _ [ _LS:RM ] [ RigidMovable:_ _Processing:_ _Moving:>:_ _Blocked:>:_ ] -> [ _LS:RM _Rerun ] [ RigidMovable:_ _Processed:_ _Blocked:>:_ ]
  ( As do 2x1 blocks moving along their short side )
  _ [ _LS:RM ] [ _Jelly2x1:perpendicular:_ _Processing:_ _Moving:>:_ _Blocked:>:_ no _Squishing:_ ] -> [ _LS:RM _Rerun ] [ _Jelly2x1:perpendicular:_ _Processed:_ _Blocked:>:_ ]

  ( 2x1 blocks moving along their long side try to squish towards both sides )
  _ [ _LS:RM ] [ _Jelly2x1:parallel:_ _Processing:_ _Moving:>:_ _Blocked:>:_ _Connector:>:_ | _Moving:>:_ _Blocked:>:_ _Connector:>:_ | _Moving:>:_ _Blocked:>:_ _Connector:>:_ | _Moving:>:_ _Blocked:>:_ no _Connector:>:_ ] -> [ _LS:RM _Rerun ] [ _Jelly2x1:parallel:_ _Moving:>:_ no _Blocked:_ _Processing:_ _Squishing:_ _Connector:>:_ | _Moving:>:_ no _Blocked:_ _Squishing:_ _Connector:>:_ | _Squishing:_ _Connector:>:_ > _Temp:_ | _Squishing:_ > _Temp:_ ]
  _ [ _LS:RM ] [ _Jelly2x1:directions:_ _Connector:>:_ perpendicular _Temp:_ ] -> [ _LS:RM _Rerun _CheckMovement ] [ _Jelly2x1:directions:_ _Moving:<:_ no _Blocked:_ _Connector:>:_ ]
  
  ( 2x1 blocks trying to squish but being blocked on one side try to expand two cells to the other side.
    We mark this with some temporary jelly objects )
  _ [ _LS:RM ] [ _Jelly2x1:perpendicular:_ _Processing:_ _Blocked:<:_ _Moving:<:_ _Squishing:_ _Connector:>:_ | _Jelly2x1:perpendicular:_ _Processing:_ _Moving:>:_ no _Blocked:>:_ _Squishing:_ | ] -> [ _LS:RM _Rerun _CheckMovement ] [ _Jelly2x1:perpendicular:_ _Processing:_ _Blocked:<:_ _Moving:<:_ _Squishing:_ _Connector:>:_ | _Jelly2x1:perpendicular:_ _Processing:_ _Moving:>:_ _Squishing:_ _Connector:>:_ | _TempJelly:_ _Processing:_ _Moving:>:_ _Squishing:_ _Connector:<:_ ]
  
  ( Blocked objects propagate this status backwards )
  _ [ _LS:RM ] [ Movable:_ _Moving:>:_ no _Blocked:>:_ no _Connector:>:_ | Movable:_ _Processed:_ _Blocked:>:_ ] -> [ _LS:RM _Rerun ] [ Movable:_ _Processing:_ _Moving:>:_ _FullyBlocked:_ | Movable:_ _Processed:_ _Blocked:>:_ ]
  _ directions [ _LS:RM ] [ Movable:_ _Moving:directions:_ _FullyBlocked:_ _Connector:>:_ | Movable:_ _Moving:directions:_ no _Blocked:_ ] -> [ _LS:RM _Rerun ] [ Movable:_ _Moving:directions:_ _FullyBlocked:_ _Connector:>:_ | Movable:_ _Moving:directions:_ _FullyBlocked:_ ]
  LowFloor [ _LS:RM ] [ Movable:LowFloor _FullyBlocked:LowFloor _ConnectorHigh:LowFloor no _Blocked:Higher ] -> [ _LS:RM _Rerun ] [ Movable:LowFloor _FullyBlocked:LowFloor _ConnectorHigh:LowFloor _FullyBlocked:Higher ]
  LowFloor [ _LS:RM ] [ Movable:LowFloor _FullyBlocked:Higher _ConnectorHigh:LowFloor no _Blocked:LowFloor ] -> [ _LS:RM _Rerun ] [ Movable:LowFloor _FullyBlocked:Higher _ConnectorHigh:LowFloor _FullyBlocked:LowFloor ]
  _ directions [ _LS:RM ] [ Movable:_ _Moving:directions:_ _Processing:_ _Connector:>:_ | Movable:_ _Moving:directions:_ _Pending:_ ] -> [ _LS:RM _Rerun ] [ Movable:_ _Moving:directions:_ _Processing:_ _Connector:>:_ | Movable:_ _Moving:directions:_ _Processing:_ ]
  LowFloor [ _LS:RM ] [ Movable:LowFloor _Processing:LowFloor _ConnectorHigh:LowFloor _Pending:Higher ] -> [ _LS:RM _Rerun ] [ Movable:LowFloor _Processing:LowFloor _ConnectorHigh:LowFloor _Processing:Higher ]
  LowFloor [ _LS:RM ] [ Movable:LowFloor _Processing:Higher _ConnectorHigh:LowFloor _Pending:LowFloor ] -> [ _LS:RM _Rerun ] [ Movable:LowFloor _Processing:Higher _ConnectorHigh:LowFloor _Processing:LowFloor ]
  
  [ _LS:RM no _Rerun ] -> [ _LS:DC ]
  [ _LS:RM _Rerun ] -> [ _LS:FP ]
  
  ((( Detect cycles of pending objects and block them )))
  [ _LS:DC ] [ _Pending ] -> [ _LS:DC _Temp ] [ _Pending ]
    
  ( Pick a pending object to process )
  _ [ _LS:DC _Temp ] [ _Pending:_ no _PendingChecked:_ _Moving:>:_ no _Connector:>:_ | _Pending:_ ]  -> [ _LS:DC _RerunDC ] [ _Pending:_ _Moving:>:_ _Temp:_ | _PendingChecking:_ ]
  
  ( Spread the PendingChecking status to all objects the marked one indirectly depends on )
  _ directions [ _LS:DC ] [ _PendingChecking:_ _Moving:directions:_ _Connector:>:_ | _Moving:directions:_ _Pending:_ ] -> [ _LS:DC ] [ _PendingChecking:_ _Moving:directions:_ _Connector:>:_ | _Moving:directions:_ _PendingChecking:_ ]
  + LowFloor [ _LS:DC ] [ _PendingChecking:LowFloor _ConnectorHigh:LowFloor _Pending:Higher ] -> [ _LS:DC ] [ _PendingChecking:LowFloor _ConnectorHigh:LowFloor _PendingChecking:Higher ]
  + LowFloor [ _LS:DC ] [ _PendingChecking:Higher _ConnectorHigh:LowFloor _Pending:LowFloor ] -> [ _LS:DC ] [ _PendingChecking:Higher _ConnectorHigh:LowFloor _PendingChecking:LowFloor ]
  + _ [ _LS:DC ] [ _PendingChecking:_ _Moving:>:_ no _Connector:>:_ | _Pending:_ ] -> [ _LS:DC ] [ _PendingChecking:_ _Moving:>:_ | _PendingChecking:_ ]
  
  ( If the marked object was itself marked as PendingChecking, it's part of a cycle )
  _ [ _LS:DC ] [ _Temp:_ _PendingChecking:_ ] -> [ _LS:DC ] [ _Temp:_ _PendingChecking:_ _PendingCycle:_ ]
  _ [ _LS:DC ] [ _Temp:_ _Pending:_ ] -> [ _LS:DC ] [ _Temp:_ _Pending:_ _PendingNoCycle:_ ]
  
  ( Spread the PendingChecked status to the entire object )
  _ directions [ _LS:DC ] [ _PendingChecked:_ _Moving:directions:_ _Connector:>:_ | _Moving:directions:_ no _PendingChecked:_ ] -> [ _LS:DC ] [ _PendingChecked:_ _Moving:directions:_ _Connector:>:_ | _Moving:directions:_ _PendingChecked:_ ]
  LowFloor [ _LS:DC ] [ _PendingCycle:LowFloor _ConnectorHigh:LowFloor no _PendingChecked:Higher ] -> [ _LS:DC ] [ _PendingCycle:LowFloor _ConnectorHigh:LowFloor _PendingCycle:Higher ]
  LowFloor [ _LS:DC ] [ _PendingNoCycle:LowFloor _ConnectorHigh:LowFloor no _PendingChecked:Higher ] -> [ _LS:DC ] [ _PendingNoCycle:LowFloor _ConnectorHigh:LowFloor _PendingNoCycle:Higher ]
  LowFloor [ _LS:DC ] [ _PendingCycle:Higher _ConnectorHigh:LowFloor no _PendingChecked:LowFloor ] -> [ _LS:DC ] [ _PendingCycle:Higher _ConnectorHigh:LowFloor _PendingCycle:LowFloor ]
  LowFloor [ _LS:DC ] [ _PendingNoCycle:Higher _ConnectorHigh:LowFloor no _PendingChecked:LowFloor ] -> [ _LS:DC ] [ _PendingNoCycle:Higher _ConnectorHigh:LowFloor _PendingNoCycle:LowFloor ]
  
  ( Clean up PendingChecking status and move the temp marker back to the top left corner )
  _ [ _LS:DC ] [ _PendingChecking:_ ] -> [ _LS:DC ] [ _Pending:_ ]
  [ _LS:DC ] [ _Temp:_ no _LS:DC ] -> [ _LS:DC _Temp ] [ ]
  
  ( Once we stop finding pending objects to check, we move on to resolving the cycles we found. )
  [ _LS:DC _Temp ] -> [ _LS:DC ]
  [ _LS:DC no _RerunDC ] -> [ _LS:BC ]
  [ _LS:DC _RerunDC ] -> [ _LS:DC ]
    
  _ [ _LS:BC ] [ _Pending:_ _PendingCycle:_ ] -> [ _LS:BC _Rerun ] [ _Processing:_ _FullyBlocked:_ ]
  [ _LS:BC ] [ _PendingNoCycle ] -> [ _LS:BC ] [ ]
  
  [ _LS:BC no _Rerun] -> [ _LS:CS ]
  [ _LS:BC _Rerun ] -> [ _LS:FP ]

  ((( CLeanup and check if we should run another step )))
  
  [ _LS:CS ] [ _Blocked ] -> [ _LS:CS ] [ ]
  [ _LS:CS ] [ _Unprocessed ] -> [ _LS:CS ] [ ]
  [ _LS:CS ] [ _Processed ] -> [ _LS:CS ] [ ]
  
  [ _LS:CS no _RunSecondStep ] -> [ ]
  
  _ [ _LS:CS > _RunSecondStep ] [ _Player:_ no _Moving:_ ] -> [ _LS:CS > _RunSecondStep ] [ _Player:_ _Moving:>:_ _Processing:_ ]
  [ _LS:CS _RunSecondStep ] -> [ _LS:FP ]
endloop

((( Drop unsupported objects )))

( Floors can't fall... )
HighFloor [ Floor:HighFloor ] -> [ Floor:HighFloor _FallingResolved:Lower]
( Neither can objects on the ground floor. )
[ Movable:_0 ] -> [ Movable:_0 _FallingResolved:_0 ]

( We need to run this in a loop because once an object is marked as falling, it might allow
  an object on top to fall as well )
startloop
  ( Objects above falling objects and objects without support can fall )
  HighFloor [ Movable:HighFloor no _FallingResolved:HighFloor _FallingResolved:Lower _Falling:Lower ] -> [ Movable:HighFloor _Falling:HighFloor _FallingResolved:Lower _Falling:Lower ]
  HighFloor [ Movable:HighFloor no _FallingResolved:HighFloor no Support:HighFloor ] -> [ Movable:HighFloor _Falling:HighFloor _FallingResolved:HighFloor ]
  HighFloor [ Movable:HighFloor no _FallingResolved:HighFloor Support:HighFloor _FallingResolved:Lower no _Falling:Lower ] -> [ Movable:HighFloor _FallingResolved:HighFloor Support:HighFloor _FallingResolved:Lower ]
  
  ( Objects that aren't completely marked as falling get reverted because they have some support )
  _ [ Movable:_ no _Falling:_ _FallingResolved:_ _Connector:>:_ | _Falling:_ ] -> [ Movable:_ _Connector:>:_ _FallingResolved:_ | _FallingResolved:_ ]
  
  ( Spread falling status upward in tall jellies if they're still falling )
  LowFloor [ _Jelly1x1TallLow:LowFloor _Falling:LowFloor _FallingResolved:LowFloor _ConnectorHigh:LowFloor no _Falling:Higher no _FallingResolved:Higher ] -> [ _Jelly1x1TallLow:LowFloor _Falling:LowFloor _FallingResolved:LowFloor _ConnectorHigh:LowFloor _Falling:Higher _FallingResolved:Higher ]
endloop

( If anything is falling, we resolve that in an again turn )
[ _Falling ] -> again
[ _FallingResolved ] -> [ ]

( Render sprites again )
_ [ _Player:_ _Connector:right:_ _Connector:up:_ ] -> [ PlayerSprite:_ _Connector:right:_ _Connector:up:_ ]
_ [ _Jelly1x1:_ _Connector:right:_ _Connector:up:_ ] -> [ Jelly1x1Sprite:_ _Connector:right:_ _Connector:up:_ ]
LowFloor [ _Jelly1x1TallLow:LowFloor _Jelly1x1TallHigh:Higher _Connector:right:LowFloor _Connector:up:LowFloor _ConnectorHigh:LowFloor ] -> [ Jelly1x1TallSprite:LowFloor _Connector:right:LowFloor _Connector:up:LowFloor _ConnectorHigh:LowFloor ]
right _ [ _Jelly2x1:right:_ _Connector:right:_ _Connector:up:_ no _Connector:left:_ no _Connector:down:_ | | ] -> [ Jelly2x1Sprite:right:_ _Connector:right:_ _Connector:up:_ | | Jelly2x1Sprite:left:_ ]
up _ [ _Jelly2x1:up:_ _Connector:right:_ _Connector:up:_ no _Connector:left:_ no _Connector:down:_ | | ] -> [ Jelly2x1Sprite:up:_ _Connector:right:_ _Connector:up:_ | | Jelly2x1Sprite:down:_ ]

==============
WINCONDITIONS
==============


=======
LEVELS
=======

(
P = PlayerSprite:_0 and Floor:_0
ℙ = PlayerSprite:_1 and Floor:_1
■ = Jelly1x1Sprite:_0 and Floor:_0
□ = Jelly1x1Sprite:_1 and Floor:_1
▌ = Jelly2x1Sprite:up:_0 and Floor:_0
▐ = Jelly2x1Sprite:up:_1 and Floor:_1
▄ = Jelly2x1Sprite:right:_0 and Floor:_0
▀ = Jelly2x1Sprite:right:_1 and Floor:_1
)

##################
##################
##################
##################
##..........****##
##..........**□*##
##......##....**##
##......##....**##
##..............##
##■.p.▌...▄.....##
##..............##
##....■...▄.....##
##..####....##..##
##..####....##..##
##################
##################


##########################
##########################
##########################
##########################
##**************........##
##**************........##
##**************........##
##**□***********........##
##**************........##
##********▀*****........##
##**************........##
##****▐***▀*****........##
##**************........##
##ℙ*************........##
##########################
##########################